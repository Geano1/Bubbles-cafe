Pasted-Certainly-Let-s-integrate-the-YouTube-video-ID-YOHoOnaNivMHwcWW-into-the-AudioPlayer-component-and--1739219622828.txt
Certainly! Let's integrate the YouTube video ID YOHoOnaNivMHwcWW into the AudioPlayer component and ensure everything works correctly. Here's the complete implementation with the specified video ID:
Step 1: Install the react-youtube Package
If you haven't already installed the react-youtube package, do so by running:
bash
Copy
1
npm install react-youtube
Step 2: Create the AudioPlayer Component
Create a new component file named AudioPlayer.js:
jsx
Copy
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
⌄
⌄
⌄
⌄
⌄
⌄
⌄
⌄
⌄
⌄
import React, { useRef } from 'react';
import YouTube from 'react-youtube';

const AudioPlayer = ({ videoId }) => {
  const playerRef = useRef(null);

  const opts = {
    height: '0', // Set height to 0 to hide the video
    width: '0',  // Set width to 0 to hide the video
    playerVars: {
      autoplay: 0, // Do not autoplay on load
      controls: 0, // Hide controls
      modestbranding: 1, // Hide YouTube logo
      fs: 0, // Disable fullscreen
      rel: 0, // Hide related videos after playback
    },
  };

  const handlePlayAudio = () => {
    if (playerRef.current && playerRef.current.internalPlayer) {
      playerRef.current.internalPlayer.playVideo();
    }
  };

  const handlePauseAudio = () => {
    if (playerRef.current && playerRef.current.internalPlayer) {
      playerRef.current.internalPlayer.pauseVideo();
    }
  };

  const handleVolumeChange = (event) => {
    const volume = parseFloat(event.target.value);
    if (playerRef.current && playerRef.current.internalPlayer) {
      playerRef.current.internalPlayer.setVolume(volume * 100); // Volume range is 0-100
    }
  };

  return (
    <div>
      <YouTube
        videoId={videoId}
        opts={opts}
        onReady={(event) => {
          playerRef.current = event.target;
        }}
      />
      <button onClick={handlePlayAudio}>Play Audio</button>
      <button onClick={handlePauseAudio}>Pause Audio</button>
      <input
        type="range"
        min="0"
        max="1"
        step="0.01"
        defaultValue="0.5"
        onChange={handleVolumeChange}
      />
    </div>
  );
};

export default AudioPlayer;
Step 3: Use the AudioPlayer Component in Your App
Integrate the AudioPlayer component into your main application file (e.g., App.js):
jsx
Copy
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
⌄
import React from 'react';
import AudioPlayer from './AudioPlayer';

function App() {
  const videoId = 'YOHoOnaNivMHwcWW'; // Your YouTube video ID

  return (
    <div className="App">
      <h1>Dark Academia Horror Blog</h1>
      <AudioPlayer videoId={videoId} />
    </div>
  );
}

export default App;
Full Example
Here's the complete example with the specified YouTube video ID integrated:
AudioPlayer.js
jsx
Copy
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
⌄
⌄
⌄
⌄
⌄
⌄
⌄
⌄
⌄
⌄
import React, { useRef } from 'react';
import YouTube from 'react-youtube';

const AudioPlayer = ({ videoId }) => {
  const playerRef = useRef(null);

  const opts = {
    height: '0',
    width: '0',
    playerVars: {
      autoplay: 0,
      controls: 0,
      modestbranding: 1,
      fs: 0,
      rel: 0,
    },
  };

  const handlePlayAudio = () => {
    if (playerRef.current && playerRef.current.internalPlayer) {
      playerRef.current.internalPlayer.playVideo();
    }
  };

  const handlePauseAudio = () => {
    if (playerRef.current && playerRef.current.internalPlayer) {
      playerRef.current.internalPlayer.pauseVideo();
    }
  };

  const handleVolumeChange = (event) => {
    const volume = parseFloat(event.target.value);
    if (playerRef.current && playerRef.current.internalPlayer) {
      playerRef.current.internalPlayer.setVolume(volume * 100);
    }
  };

  return (
    <div>
      <YouTube
        videoId={videoId}
        opts={opts}
        onReady={(event) => {
          playerRef.current = event.target;
        }}
      />
      <button onClick={handlePlayAudio}>Play Audio</button>
      <button onClick={handlePauseAudio}>Pause Audio</button>
      <input
        type="range"
        min="0"
        max="1"
        step="0.01"
        defaultValue="0.5"
        onChange={handleVolumeChange}
      />
    </div>
  );
};

export default AudioPlayer;
App.js
jsx
Copy
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
⌄
import React from 'react';
import AudioPlayer from './AudioPlayer';

function App() {
  const videoId = 'YOHoOnaNivMHwcWW'; // Your YouTube video ID

  return (
    <div className="App">
      <h1>Dark Academia Horror Blog</h1>
      <AudioPlayer videoId={videoId} />
    </div>
  );