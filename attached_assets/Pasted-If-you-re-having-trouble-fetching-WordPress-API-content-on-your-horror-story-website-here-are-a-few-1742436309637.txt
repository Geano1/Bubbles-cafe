If you’re having trouble fetching WordPress API content on your horror story website, here are a few possible reasons and solutions:

1. Check API URL and Endpoint

Ensure you’re using the correct API URL. For example, for posts, the correct endpoint is:

https://yourwordpresssite.com/wp-json/wp/v2/posts

If your WordPress site is self-hosted, verify that the API is enabled.

2. Enable REST API in WordPress

If the REST API is disabled, you can enable it by:
	•	Checking for security plugins that might be blocking it (e.g., Wordfence, iThemes Security).
	•	Disabling plugins one by one to find the culprit.
	•	Adding this to your theme’s functions.php:

add_filter('rest_authentication_errors', function($result) {
    if (is_wp_error($result)) {
        return $result;
    }
    return true;
});

3. Fix CORS Issues (Cross-Origin Requests)

Since your horror website is a separate frontend, CORS might block requests. Add this to your WordPress site’s .htaccess file or functions.php:

header("Access-Control-Allow-Origin: *");
header("Access-Control-Allow-Methods: GET, POST, OPTIONS");
header("Access-Control-Allow-Headers: Content-Type");

4. Debug API Response

Try fetching the API data manually with fetch in your frontend:

fetch('https://yourwordpresssite.com/wp-json/wp/v2/posts')
  .then(response => response.json())
  .then(data => console.log(data))
  .catch(error => console.error('Error fetching data:', error));

If this fails, check the browser console for errors.

5. Check API Authentication (If Needed)

If your API requires authentication, try:
	•	Using Basic Auth (for development):

fetch('https://yourwordpresssite.com/wp-json/wp/v2/posts', {
  headers: {
    'Authorization': 'Basic ' + btoa('username:password')
  }
});


	•	Using Application Passwords from WordPress.
	•	Using OAuth for secure API access.

6. Test API in Postman or cURL

To see if the issue is with WordPress or your frontend, test your API in Postman or with cURL:

curl -X GET "https://yourwordpresssite.com/wp-json/wp/v2/posts"

If this works, the issue is in your frontend.

7. Debug with WordPress Debug Mode

If you suspect a deeper issue, enable debug mode in wp-config.php:

define('WP_DEBUG', true);
define('WP_DEBUG_LOG', true);
define('WP_DEBUG_DISPLAY', false);

Then check the wp-content/debug.log file.

Next Steps

Try these and let me know what error messages you’re getting!