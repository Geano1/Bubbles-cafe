const getExcerpt = (content: string) => {
  if (!content) return '';

  const paragraphs = content.split('\n\n');
  const engagingParagraph = paragraphs.find(p =>
    p.includes('!') ||
    p.includes('?') ||
    p.includes('...') ||
    p.toLowerCase().includes('suddenly') ||
    p.toLowerCase().includes('horror') ||
    p.toLowerCase().includes('fear') ||
    p.toLowerCase().includes('scream') ||
    p.toLowerCase().includes('blood') ||
    p.toLowerCase().includes('dark')
  );

  const selectedParagraph = engagingParagraph || paragraphs[0];
  const maxLength = 100;
  const trimmed = selectedParagraph.trim();
  return trimmed.length > maxLength
    ? trimmed.slice(0, maxLength).split(' ').slice(0, -1).join(' ') + '...'
    : trimmed;
};

export default function IndexView() {
  const [, setLocation] = useLocation();
  const { data: postsData, isLoading, error } = useQuery<PostsResponse>({
    queryKey: ["pages", "index", "all-posts"],
    queryFn: async () => {
      const response = await fetch('/api/posts?section=index&page=1&limit=16&type=index');

      if (!response.ok) throw new Error('Failed to fetch posts');
      return response.json();
    },
    staleTime: 5 * 60 * 1000,
    refetchOnMount: false,
    refetchOnWindowFocus: false
  });

  const formatDate = (date: Date) => {
    try {
      return format(date, 'MMMM d, yyyy');
    } catch (error) {
      console.error('Error formatting date:', error);
      return '';
    }
  };

  return (
    <div className="relative min-h-screen bg-background">
      <Mist className="opacity-40" />
      <div className="container mx-auto px-4 py-8 relative z-10">
        <div className="max-w-6xl mx-auto">
          <motion.div
            className="flex flex-col sm:flex-row items-center justify-between gap-4 mb-8 bg-card/30 backdrop-blur-sm p-6 rounded-lg border border-border/50"
            initial={{ opacity: 0, y: -20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.5 }}
          >
            <div>
              <h1 className="stories-page-title text-4xl font-decorative mb-2">INDEX</h1>
              <p className="text-muted-foreground">Explore our collection of haunting tales</p>
            </div>
            <Button
              variant="outline"
              onClick={() => setLocation('/')}
              className="hover:bg-primary/20 transition-colors"
            >
              Back to Home
            </Button>
          </motion.div>
        </div>
      </div>
    </div>
  );
}