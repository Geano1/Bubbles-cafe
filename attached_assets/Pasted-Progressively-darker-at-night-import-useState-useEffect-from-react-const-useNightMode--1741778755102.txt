Progressively darker at night

import { useState, useEffect } from "react";

const useNightMode = () => {
  const [nightMode, setNightMode] = useState(false);

  useEffect(() => {
    const currentHour = new Date().getHours();
    setNightMode(currentHour >= 20 || currentHour < 6);
  }, []);

  return nightMode;
};

const NightModeWrapper = ({ children }) => {
  const nightMode = useNightMode();

  return (
    <div className={`transition-all duration-500 ${nightMode ? "bg-[#0B0605] text-[#A89D96]" : "bg-[#150D0D] text-[#D8D3D0]"}`}>
      {children}
    </div>
  );
};

export default NightModeWrapper;

Soft blurred background on modal open

import { motion } from "framer-motion";
import { useState } from "react";

const Modal = ({ isOpen, onClose, children }) => {
  return (
    <div className={`fixed inset-0 flex items-center justify-center transition-opacity ${isOpen ? "opacity-100 visible" : "opacity-0 invisible"}`}>
      <div className="absolute inset-0 bg-black/50 backdrop-blur-md transition-all"></div>  
      <motion.div 
        initial={{ scale: 0.9, opacity: 0 }} 
        animate={{ scale: 1, opacity: 1 }} 
        exit={{ scale: 0.9, opacity: 0 }} 
        className="relative p-6 bg-dark text-white rounded-lg shadow-xl"
      >
        {children}
        <button onClick={onClose} className="absolute top-2 right-2 text-lg">âœ–</button>
      </motion.div>
    </div>
  );
};

const App = () => {
  const [modalOpen, setModalOpen] = useState(false);

  return (
    <div>
      <button onClick={() => setModalOpen(true)} className="p-3 bg-accent text-white rounded-lg">Open Modal</button>
      {modalOpen && <Modal isOpen={modalOpen} onClose={() => setModalOpen(false)}>This is a modal</Modal>}
    </div>
  );
};

export default App;

Section divider animations

import { motion } from "framer-motion";

const MistDivider = () => {
  return (
    <motion.div 
      className="relative h-12 w-full bg-gradient-to-r from-transparent via-[#66493A]/50 to-transparent"
      initial={{ opacity: 0.3, filter: "blur(5px)" }} 
      animate={{ opacity: [0.3, 0.5, 0.3], filter: ["blur(5px)", "blur(8px)", "blur(5px)"] }} 
      transition={{ repeat: Infinity, duration: 6, ease: "easeInOut" }}
    />
  );
};

<div>
  <p>Section 1 content...</p>
  <MistDivider />
  <p>Section 2 content...</p>
</div>

Trending story highlights

const TrendingStory = ({ title, excerpt, isTrending }) => (
  <div className={`p-4 border-l-4 transition-all duration-300 ${isTrending ? "border-accent shadow-lg shadow-accent/50" : "border-muted"}`}>
    <h3 className="text-lg font-semibold">{title}</h3>
    <p className="text-sm text-muted">{excerpt}</p>
  </div>
);

Auto detect trending story

const stories = [
  { title: "The Haunting", views: 1200 },
  { title: "Shadows in the Dark", views: 800 },
];

const StoryList = () => {
  const topTrendingThreshold = 1000;

  return stories.map((story) => (
    <TrendingStory
      key={story.title}
      title={story.title}
      excerpt="A chilling tale of..."
      isTrending={story.views >= topTrendingThreshold}
    />
  ));
};
